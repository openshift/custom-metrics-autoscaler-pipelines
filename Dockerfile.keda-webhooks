#TODO(jkyros): There is something wrong with repo cert trust between the published RPM repos and the builder
# It's a builder though, so I dunno if I really care 
FROM brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_9_1.23 as builder

#FROM registry.redhat.io/ubi9/go-toolset as builder

LABEL stage=build
# Silence go compliance shim output
ENV GO_COMPLIANCE_INFO=0
ENV GO_COMPLIANCE_DEBUG=0

# Set go toolchain to local, this prevents it from
# downloading the latest version
ENV GOTOOLCHAIN=local

# If you don't set this as args, you don't seem to get them
ARG TARGETOS
ARG TARGETARCH

# The KEDA makefiles need this to get the right platform
ENV ARCH=${TARGETARCH}

RUN dnf install -y protobuf-compiler

# Get the sources in here
COPY /kedacore-keda/ /src/

# And the tools, but separately
COPY /tools/ /tools/

WORKDIR /src/

RUN cd /tools/controller-tools/ && GOFLAGS="" go build -o /src/bin/controller-gen ./cmd/controller-gen
RUN cd /tools/mock/ && GOFLAGS="" go build -o /src/bin/mockgen ./mockgen
RUN cd /tools/protobuf/ && cd src/google && for f in $(find protobuf/ -name '*.proto'); do mkdir -p /usr/include/google/"$(dirname "$f")"; cp "$f" /usr/include/google/"$f"; done

# this breaks controller-gen if it's there because it thinks it's "inconsistent vendoring" because it's just a random go.mod file hanging out
RUN rm -rf /src/hack/tooldeps
RUN LOCALBIN=/src/bin GOFLAGS='-tags=strictfipsruntime' make CGO=1 webhooks

# MintMaker is not smart enough to figure out which "latest" you shipped, 
# so we need to keep the hash here and let MintMaker security update it. No, I don't like it either.
# See: https://konflux.pages.redhat.com/docs/users/mintmaker/user.html#enable-container-image-tag-versioning
# FROM registry.access.redhat.com/ubi9/ubi-minimal:latest
FROM registry.access.redhat.com/ubi9/ubi-minimal:latest@sha256:11db23b63f9476e721f8d0b8a2de5c858571f76d5a0dae2ec28adf08cbaf3652

# CVE-2024-12797 - remove once base image has the fix
# RUN microdnf install -y openssl-libs-1:3.2.2-6.el9_5.1

WORKDIR /
RUN microdnf install -y tzdata
COPY --from=builder /src/bin/keda-admission-webhooks /usr/bin/
RUN ln -s /usr/bin/keda-admission-webhooks /keda-admission-webhooks

# Compliance
RUN mkdir /licenses
COPY --from=builder /src/LICENSE /licenses/

USER nobody


# These labels are necessary to pass the enterprise contracts
LABEL io.k8s.display-name="OpenShift Custom Metrics Autoscaler Admission Webhooks" \
      io.k8s.description="This is a component of OpenShift which validates KEDA objects." \
      com.redhat.component="custom-metrics-autoscaler-admission-webhooks-container" \
      name="custom-metrics-autoscaler-admission-webhooks-rhel-9" \
      summary="custom-metrics-autoscaler-admission-webhooks" \
      io.openshift.expose-services="" \
      io.openshift.tags="openshift,custom-metrics-autoscaler-admission-webhooks" \
      description="custom-metrics-autoscaler-container-admission-webhooks" \
      maintainer="AOS node team <aos-node@redhat.com>"

# TODO(jkyros): I don't know what to do about the upstream labels yet, I don't think Konflux gets it for you
#LABEL upstream-version="${CI_KEDACORE_KEDA_UPSTREAM_VERSION}" \
#      upstream-vcs-ref="${CI_KEDACORE_KEDA_UPSTREAM_COMMIT}" \
#      upstream-vcs-type="git" \

# Chore: update this when openshift release changes
LABEL com.redhat.openshift.versions="v4.18"

# Chore: this will get used in the release policy, so update this when our version we're releasing changes
LABEL version="2.17.2"
# I don't know that we can auto-increment this without an additional pipeline stage or something, but if we omit it,
# we fail the metadata requirements, so we have to put _something_ here
LABEL release="1"

ENTRYPOINT ["/usr/bin/keda-admission-webhooks", "--zap-log-level=info", "--zap-encoder=console"]

